{"version":3,"sources":["components/appBar.js","utils/helper.js","components/RenderData.js","config/api.js","components/searchBar.js","App.js","index.js"],"names":["AppBarExampleIcon","props","react_default","a","createElement","AppBar_default","title","style","width","margin","get_request","_ref4","Object","asyncToGenerator","regenerator_default","mark","_callee4","url","response","body","wrap","_context4","prev","next","fetch","sent","json","abrupt","t0","console","log","stop","this","_x7","apply","arguments","height","padding","textAlign","display","RenderData","Paper_default","zDepth","keys","data","map","key","i","api_base_url","SearchBar","state","value","showData","source","packager","designer","shipper","handleUpdateInput","ev","_this","setState","target","submitHandler","then","res","undefined","result","swal","text","icon","buttons","dangerMode","catch","err","message","_this$state","appBar","marginTop","TextField_default","hintText","floatingLabelText","onChange","RaisedButton_default","label","primary","onClick","Grid_default","container","spacing","item","xs","components_RenderData","Component","App","className","searchBar_SearchBar","ReactDOM","render","MuiThemeProvider_default","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.06186f9e.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from 'material-ui/AppBar';\n\n/**\n * A simple example of `AppBar` with an icon on the right.\n * By default, the left icon is a navigation-menu.\n */\nconst AppBarExampleIcon = (props) => (\n  <AppBar\n    title={<div style = {{width :  'fit-content', margin : 'auto'}}>Timber Supplychain Panel</div>}\n    // iconElementLeft={<p style = {{color : 'white'}}>{props.obj.name}</p>}\n    // iconElementRight={<p style = {{color : 'white'}}>ID:{props.obj.uid}</p>}\n  />\n);\n\nexport default AppBarExampleIcon;\n","import { func } from \"prop-types\";\nexport function validEmail(email){\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nexport function validPassword(password){\n    if(password.length < 6){\n        return false\n    }\n    return true;\n}\n\n    // Function to call the API, POST request\nexport const post_request = async (url, user_data) => {\n        console.log(user_data)\n        const rawResponse = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user_data)\n        });\n        const content = await rawResponse.json();\n        console.log(content);\n        return content;\n    };\n\n    // Function to UPDATE\n    export const put_request = async (url, data) => {\n        const rawResponse = await fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        const content = await rawResponse.json();\n        console.log(content);\n        return content;\n    };\n\n    export const delete_request = async (url, data) => {\n        const rawResponse = await fetch(url, {\n            method: 'delete',\n            mode : \"cors\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        const content = await rawResponse.json();\n        console.log(content);\n        return content;\n    };\n    \n    //delete Data\n    // export function deleteData(url) {\n    //     return fetch(url, {\n    //       method: 'delete'\n    //     })\n    //     .then(response => {\n    //     console.log(response.json(), response.status, response.statusText);\n    //     return response.json();\n    //     })\n    //     .catch((err) => (console.log(err)))\n    //   }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    export const get_request = async (url) => {\n        try{\n            const response = await fetch(url);\n            const body = await response.json();\n            return body;\n        }\n        catch(err){\n            console.log(err);\n        }\n    };\n    \n    \n    const monthName = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",\n                    \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n\n      export function millisecondsToCompleteDate(ms){\n        let milliseconds = parseInt(ms, 10);\n\n        let time = new Date(milliseconds);\n        let obj = {\n            date : time.getDate(),\n            month : monthName[time.getMonth()],\n            year : time.getFullYear()\n        }\n        console.log(obj)\n        return obj.date + ' ' + obj.month + ', ' + obj.year;\n    }\n\n    export function millisecondsToMonth(ms){\n        let milliseconds = parseInt(ms, 10);\n        let time = new Date(milliseconds);\nreturn monthName[time.getMonth()]\n    }\n\n    export function millisecondsToDate(ms){\n        let milliseconds = parseInt(ms, 10);\n        let time = new Date(milliseconds);\nreturn time.getDate()\n    }\n\n    export function millisecondsToDay(ms){\n        const dayName = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n        let milliseconds = parseInt(ms, 10);\n        let time = new Date(milliseconds);\n        // console.log( time.getDay())\n        return dayName[time.getDay()]\n    }","\nimport React from 'react';\nimport Paper from 'material-ui/Paper';\n\nconst style = {\n  height: \"100%\",\n  width: \"100%\",\n  margin: 20,\n  padding : 20,\n  textAlign: 'center',\n  display: 'inline-block',\n};\n\nconst RenderData = (props) => {\n  console.log(props)\nreturn(\n  <div>\n    <Paper style={style} zDepth={2} >\n    <h5>{props.title}</h5>\n    {Object.keys(props.data).map((key, i) => {\n      return (\n        <div key={i}>{key}:{props.data[key]}</div>\n      )\n    })}\n    {/* {props.data.company} */}\n    </Paper>\n  </div>\n)}\n\nexport default RenderData;\n","export const api_base_url = \"https://supplychain-timber.herokuapp.com\"\n","import React, {Component} from 'react';\nimport TextField from 'material-ui/TextField';\nimport AppBar from './appBar'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport {get_request} from '../utils/helper'\nimport RenderData from './RenderData'\nimport Grid from '@material-ui/core/Grid';\nimport { api_base_url } from '../config/api';\nimport swal from 'sweetalert';\n\nexport default class SearchBar extends Component {\n    state = {\n        value: '',\n        showData : false,\n        source : {},\n        packager :{},\n        designer : {},\n        shipper : {}\n    };\n\n    handleUpdateInput = (ev) => {\n        this.setState({\n            value: ev.target.value\n        });\n    };\n\n    submitHandler = () => {\n      get_request(api_base_url + '/participant/timber/' + this.state.value).then(res =>{ \n          console.log(res);\n          if(res !== undefined){\n              let data = res.data.result\n              console.log(typeof(res.data.result) );\n              this.setState({\n                  source : data.source,\n                  packager : data.packager,\n                  designer : data.designer,\n                  shipper : data.shipper   \n              })\n          }else {\n              swal({\n                  title: \"Error 404\",\n                  text: \"something went wrong, can't be able to contact server.\",\n                  icon: \"error\",\n                  buttons: true,\n                  dangerMode: true,\n                })\n          }\n          })\n          .catch(err => {\n              console.log(err)\n              swal({\n                title: \"Error 404\",\n                text: err.message,\n                icon: \"error\",\n                buttons: true,\n                dangerMode: true,\n              })\n          })    \n    }\n\n    componentDidMount() {\n    }\n    \n\n    render() {\n        var {source, designer, shipper, packager} = this.state;\n        return (\n            <div> \n                <AppBar/>\n                <div style={{width: 'fit-content', margin: 'auto', marginTop: '50px'}}>\n                    <TextField\n                        hintText=\"65567\"\n                        floatingLabelText=\"Enter Timber Number Here\"\n                        onChange={this.handleUpdateInput}\n                    />\n                    <RaisedButton label=\"Submit\" primary={true} onClick={this.submitHandler}/>\n                </div>\n                {\n        //   (this.state.showData) ? (\n            <div style = {{width : '80%', margin : 'auto'}}>\n             <Grid container spacing={24}>\n        <Grid item xs={6}>\n                     <RenderData data = {source} title = \"source\"/> \n        </Grid>\n        <Grid item xs={6}>\n                     <RenderData data = {designer} title = \"designer\"/> \n        </Grid>\n        <Grid item xs={6}>\n                     <RenderData data = {shipper} title = \"shipper\"/> \n        </Grid>\n        <Grid item xs={6}>\n                     <RenderData data = {packager} title = \"packager\"/> \n        </Grid>\n        </Grid>\n            </div>\n        //   ):(null)\n        }\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport SearchBar from './components/searchBar'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'; \n\nReactDOM.render(<MuiThemeProvider><App /></MuiThemeProvider>, document.getElementById('root'));"],"sourceRoot":""}